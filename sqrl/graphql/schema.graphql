schema {
    query: Query
}

enum SectionTeachingMethod {
    LECTURE
    TUTORIAL
    PRACTICAL
}

enum SectionDeliveryMode {
    CLASS
    ONLINE_SYNC
    ONLINE_ASYNC
}

enum MeetingDay {
    MONDAY
    TUESDAY
    WEDNESDAY
    THURSDAY
    FRIDAY
    SATURDAY
    SUNDAY
}

enum CourseTerm {
    FIRST_SEMESTER
    SECOND_SEMESTER
    FULL_YEAR
}

type Organisation {
    id: ID!
    code: String!
    name: String!
}

type Instructor {
    id: ID!
    first_name: String!
    last_name: String!
}

scalar Datetime

type SectionMeeting {
    id: ID!
    day: MeetingDay!
    start_time: Datetime!
    end_time: Datetime!
    assigned_room_1: String
    assigned_room_2: String
    section: Section!
}

type Section {
    id: ID!
    course: Course!
    teaching_method: SectionTeachingMethod
    section_number: String!
    subtitle: String
    instructors: [Instructor!]!
    meetings: [SectionMeeting!]!
    delivery_mode: SectionDeliveryMode
    cancelled: Boolean!
    has_waitlist: Boolean!
    enrollment_capacity: Int
    actual_enrolment: Int
    actual_waitlist: Int
    enrolment_indicator: String
}

type Course {
    id: ID!
    organisation: Organisation!
    code: String!
    title: String!
    description: String!
    term: CourseTerm!
    session: String!
    sections: [Section!]!
    prerequisites: String
    corequisites: String
    exclusions: String
    recommended_preparation: String
    breadth_categories: String
    distribution_categories: String
    web_timetable_instructions: String
    delivery_instructions: String
}

type Query {
    courses: [Course!]!
    course(id: ID!): Course!
}